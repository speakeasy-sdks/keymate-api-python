"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from keymate_api import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListStatus:
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""/search: Searches the internet using a provided query and returns results, including HTML content and PDF summaries from the links.
    /ultrafastsearch and /keymate, /fast: Provides ultra-fast search results from multiple sources, giving a comprehensive view with structured summaries.
    /browse: Extracts the text content of a specified URL, generating title and content.
    /upsert, /savetopkb, /insert: Inserts the last response to remember the context in following conversations, enhancing the user's personal knowledge base.
    /query and /pkb, /pdfsearch: Queries the user's knowledge base to understand user's intent, context, preferences from previously inserted data.
    /resetknowledgebase and /reset: Deletes and resets all the data in the user's knowledge base after user confirmation.
    /help: Returns a message explaining how to use the internetSearch plugin.
    /list and /ls: Returns a message listing the available commands that can be run on the internetSearch plugin.
    /pdfload: Returns a message providing a URL where users can upload their PDF files.
    """
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListResponseBody:
    r"""Successful operation"""
    status: Optional[ListStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    



@dataclasses.dataclass
class ListResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    object: Optional[ListResponseBody] = dataclasses.field(default=None)
    r"""Successful operation"""
    

